/*
 * Copyright (c) 2020 Paul M. Bendixen
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/f3/stm32f303Xe.dtsi>
#include <st/f3/stm32f303r(d-e)tx-pinctrl.dtsi>
#include <zephyr/dt-bindings/led/led.h>

#include "./ws2812B-bindings.h"

/ {
	model = "Electronya DIY GT Wheel";
	compatible = "en,enya-t-wheel";

	chosen {
		zephyr,console = &usart1;
		zephyr,shell-uart = &usart1;
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
	};

	leds {
		compatible = "gpio-leds";
		led_alive: led_alive {
			gpios = <&gpioc 15 GPIO_ACTIVE_HIGH>;
			label = "ALIVE LED";
		};

    /* the following are not LED but merely output GPIOs */
    btn_col0: btn_col0 {
			gpios = <&gpioc 10 GPIO_ACTIVE_LOW>;
			label = "Button Col0";
		};
    btn_col1: btn_col1 {
			gpios = <&gpioc 11 GPIO_ACTIVE_LOW>;
			label = "Button Col1";
		};
    btn_col2: btn_col2 {
			gpios = <&gpioc 12 GPIO_ACTIVE_LOW>;
			label = "Button Col2";
		};
    btn_col3: btn_col3 {
			gpios = <&gpiod 2 GPIO_ACTIVE_LOW>;
			label = "Button Col3";
		};
    btn_col4: btn_col4 {
			gpios = <&gpiob 11 GPIO_ACTIVE_LOW>;
			label = "Button Col4";
		};
    btn_col5: btn_col5 {
			gpios = <&gpiob 12 GPIO_ACTIVE_LOW>;
			label = "Button Col5";
		};
    btn_col6: btn_col6 {
			gpios = <&gpiob 13 GPIO_ACTIVE_LOW>;
			label = "Button Col6";
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
    /* following are merely inputs */
		btn_row0: btn_row0 {
			gpios = <&gpiob 12 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
      label = "Button Row0";
		};
    btn_row1: btn_row1 {
			gpios = <&gpiob 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
      label = "Button Row1";
		};
    btn_row2: btn_row2 {
			gpios = <&gpiob 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
      label = "Button Row2";
		};
    btn_row3: btn_row3 {
			gpios = <&gpiob 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
      label = "Button Row3";
		};
    btn_row4: btn_row4 {
			gpios = <&gpioc 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
      label = "Button Row4";
		};
    btn_row5: btn_row5 {
			gpios = <&gpioc 7 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
      label = "Button Row5";
		};
    btn_row6: btn_row6 {
			gpios = <&gpioc 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
      label = "Button Row6";
		};
    btn_row7: btn_row7 {
			gpios = <&gpioc 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
      label = "Button Row7";
		};
    left_shifter: left_shifter {
			gpios = <&gpioa 10 (GPIO_ACTIVE_LOW)>;
      label = "Left Shifter";
		};
    right_shifter: right_shifter {
			gpios = <&gpioc 13 (GPIO_ACTIVE_LOW)>;
      label = "Right Shifter";
		};
    left_rocker: left_rocker {
			gpios = <&gpiob 6 (GPIO_ACTIVE_LOW)>;
      label = "Left Rocker";
		};
    right_rocker: right_rocker {
			gpios = <&gpiob 5 (GPIO_ACTIVE_LOW)>;
      label = "Right Rocker";
		};
    left_enc_a: left_enc_a {
			gpios = <&gpiob 4 (GPIO_ACTIVE_HIGH)>;
      label = "Left Encoder A";
		};
    left_enc_b: left_enc_b {
			gpios = <&gpiob 3 (GPIO_ACTIVE_HIGH)>;
      label = "Right Encoder B";
		};
    right_enc_a: right_enc_a {
			gpios = <&gpiob 9 (GPIO_ACTIVE_HIGH)>;
      label = "Right Encoder A";
		};
    right_enc_b: right_enc_b {
			gpios = <&gpiob 8 (GPIO_ACTIVE_HIGH)>;
      label = "Right Encoder B";
		};
    tc_enc_a: tc_enc_a {
			gpios = <&gpioa 8 (GPIO_ACTIVE_HIGH)>;
      label = "TC Encoder A";
		};
    tc_enc_b: tc_enc_b {
			gpios = <&gpioa 9 (GPIO_ACTIVE_HIGH)>;
      label = "TC Encoder B";
		};
    tc1_enc_a: tc1_enc_a {
			gpios = <&gpiob 11 (GPIO_ACTIVE_HIGH)>;
      label = "TC1 Encoder A";
		};
    tc1_enc_b: tc1_enc_b {
			gpios = <&gpiob 10 (GPIO_ACTIVE_HIGH)>;
      label = "TC1 Encoder B";
		};
    abs_enc_a: abs_enc_a {
			gpios = <&gpioc 0 (GPIO_ACTIVE_HIGH)>;
      label = "ABS Encoder A";
		};
    abs_enc_b: abs_enc_b {
			gpios = <&gpioc 1 (GPIO_ACTIVE_HIGH)>;
      label = "ABS Encoder B";
		};
    map_enc_a: map_enc_a {
			gpios = <&gpioc 13 (GPIO_ACTIVE_HIGH)>;
      label = "MAP Encoder A";
		};
    map_enc_b: map_enc_b {
			gpios = <&gpioc 13 (GPIO_ACTIVE_HIGH)>;
      label = "MAP Encoder B";
		};
	};

	aliases {
    /* led alive */
		alive = &led_alive;
		/* button columns */
    col0 = &btn_col0;
    col1 = &btn_col1;
    col2 = &btn_col2;
    col3 = &btn_col3;
    /* button rows */
    row0 = &btn_row0;
    row1 = &btn_row1;
    row2 = &btn_row2;
    row3 = &btn_row3;
    row4 = &btn_row4;
    row5 = &btn_row5;
    row6 = &btn_row6;
    row7 = &btn_row7;
    /* shifter */
    left-shifter = &left_shifter;
    right-shifter = &right_shifter;
    /* rocker */
    left-rocker = &left_rocker;
    right-rocker = &right_rocker;
    /* encoders */
    left-enc-a = &left_enc_a;
    left-enc-b = &left_enc_b;
    right-enc-a = &right_enc_a;
    right-enc-b = &right_enc_b;
    tc-enc-a = &tc_enc_a;
    tc-enc-b = &tc_enc_b;
    tc1-enc-a = &tc1_enc_a;
    tc1-enc-b = &tc1_enc_b;
    abs-enc-a = &abs_enc_a;
    abs-enc-b = &abs_enc_b;
    map-enc-a = &map_enc_a;
    map-enc-b = &map_enc_b;
    /* led strip */
    ledstrip = &led_strip;
    /* adc */
    adc = &adc1;
    /* usb */
    usb = &usb;
    /* watchdog */
    iwdg = &iwdg;
	};
};

&clk_lsi {
	status = "okay";
};

&clk_hse {
	hse-bypass;
	clock-frequency = <DT_FREQ_M(8)>; /* STLink 8MHz clock */
	status = "okay";
};

&pll {
	prediv = <1>;
	mul = <9>;
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(72)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <2>;
	apb2-prescaler = <1>;
};

&usart1 {
	pinctrl-0 = <&usart1_tx_pc4 &usart1_rx_pc5>;
	pinctrl-names = "default";
	current-speed = <115200>;
	status = "okay";
};

&spi1 {
	pinctrl-0 = <&spi1_mosi_pa7 &spi1_miso_pa6 &spi1_sck_pa5>;
	pinctrl-names = "default";
	status = "okay";

  dmas = <&dma1 3 (STM32_DMA_PERIPH_TX | STM32_DMA_PRIORITY_HIGH)>,
		     <&dma1 2 (STM32_DMA_PERIPH_RX | STM32_DMA_PRIORITY_HIGH)>;
	dma-names = "tx", "rx";

  led_strip: ws2812@0 {
		compatible = "everlight,b1414", "worldsemi,ws2812-spi";
    status = "okay";
		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <SPI_FREQ>;
		/* WS2812 */
		chain-length = <14>;
		color-mapping = <LED_COLOR_ID_GREEN
                     LED_COLOR_ID_RED
                     LED_COLOR_ID_BLUE>;
		spi-one-frame = <ONE_FRAME>;
		spi-zero-frame = <ZERO_FRAME>;
    reset-delay = <250>;
	};
};

&adc1 {
  status = "okay";
  pinctrl-names = "default";
  pinctrl-0 = <&adc1_in1_pa0 &adc1_in2_pa1>;
};

&usb {
  status = "okay";
  pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
	pinctrl-names = "default";
};

&iwdg {
  // TODO: enable at the end of dev.
	status = "disabled";
};

&dma1 {
  status = "okay";
};
